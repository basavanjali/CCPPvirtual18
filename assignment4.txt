1)  C program to accept five integer values from keyword.

#include<stdio.h>  
   
int main()  
    {  
     int arr[5],i;  
      int *p=arr;  
      printf("Enter five numbers separated by space:");  
      scanf("%d%d%d%d%d",p,p+1,p+2,p+3,p+4);  
      printf("Your numbers are:\n");  
      for(i=0;i<5;i++)  
         printf("%d\n",arr[i]);       
  
     return 0;    
    } 
-----------------------------------------------------------------------------------------------
2. C program to read two numbers from user and add them using pointers.
  How to find sum of two number using pointers in C programming.
  Program to perform arithmetic operations on number using pointers. 
 
#include <stdio.h>

int main()
{
    int num1, num2;
    int sum, sub, mult;
    int div;

    /*
     * Input two numbers from user
     */
    printf("Enter any two numbers: ");
    scanf("%d%d", &num1, &num2);

    /*
     * Perform all arithmetic operations
     */ 
    sum = num1 + num2;
    sub = num1 - num2;
    mult = num1 * num2;
    div = (int)num1 / num2;
    

    /*
     * Print result of all arithmetic operations
     */
    printf("SUM = %d\n", sum);
    printf("DIFFERENCE = %d\n", sub);
    printf("PRODUCT = %d\n", mult);
    printf("QUOTIENT = %d\n", div);

    return 0; 
}

------------------------------------------------------------------------------------------
3. C program to swap two numbers using pointers and functions.
How to swap two numbers using call by reference method. Logic to swap two number using pointers in C program. 


#include<stdio.h>
 
void swap(int *num1, int *num2) {
   int temp;
   temp = *num1;
   *num1 = *num2;
   *num2 = temp;
}
 
int main() {
   int num1, num2;
 
   printf("\nEnter the first number : ");
   scanf("%d", &num1);
   printf("\nEnter the Second number : ");
   scanf("%d", &num2);
 
   swap(&num1, &num2);
 
   printf("\nFirst number  : %d", num1);
   printf("\nSecond number : %d", num2);
 
   return (0);
}

------------------------------------------------------------------------
4.C program to count total number of words in a string using loop. How to find total number of words in a given string using loops in C programming. Logic to count total number of words in a string.  

#include <stdio.h>
#include <string.h>
 
void main()
{
    char s[200];
    int count = 0, i;
 
    printf("enter the string\n");
    scanf("%[^\n]s", s);
    for (i = 0;s[i] != '\0';i++)
    {
        if (s[i] == ' ')
            count++;    
    }
    printf("number of words in given string are: %d\n", count + 1);
}
------------------------------------------------------------------------------------------
5. C program to transfer data from one file to another file. 

#include<stdio.h>

void main()
{
    
    FILE *fp1, *fp2;
    char ch;
    int pos;

    if ((fp1 = fopen("one.txt", "r")) == NULL)
    {
        printf("\nFile cannot be opened.");
        return;
    }
    else
    {
        printf("\nFile opened for copy...\n ");
    }
    fp2 = fopen("two.txt", "w");
    fseek(fp1, 0L, SEEK_END); 
    pos = ftell(fp1);
    fseek(fp1, 0L, SEEK_SET);
    while (pos--)
    {
        ch = fgetc(fp1);
        fputc(ch, fp2);
    }
    fclose(fp1);
    fclose(fp2);
}
-----------------------------------------------------------------------------------
6.program for malloc and free
#include <stdio.h>
#include <stdlib.h>

int main()
{
    int n, i, *p, s = 0;

    printf("Enter number of elements: ");
    scanf("%d", &n);

    p = (int*) malloc(n * sizeof(int));
    if(p == NULL)                     
    {
        printf("Error! memory not allocated.");
        exit(0);
    }
    printf("\n");
    printf("Enter elements of array: ");
    for(i = 0; i < n; ++i)
    {
        scanf("%d", p + i);
        s = s + *(p + i);
    }
    printf("\n");
    printf("Sum = %d", s);
    free(p);
    return 0;
}

Test Data:
Enter number of elements:5
Enter elements of array:
1
2
3
4
5

Output:
Sum = 15
-----
program for calloc and free
#include <stdlib.h>

int main()
{
    int n, i, *p, s = 0;
    printf("Enter number of elements: ");
    scanf("%d", &n);

    p = (int*) calloc(n, sizeof(int));
    if(p == NULL)
    {
        printf("Error! memory not allocated.");
        exit(0);
    }
    printf("\n");
    printf("Enter elements of array: ");
    for(i = 0; i < n; ++i)
    {
        scanf("%d", p + i);
        s = s + *(p + i);
    }
    printf("\n");
    printf("Sum = %d", s);
    free(p);
    return 0;
}
